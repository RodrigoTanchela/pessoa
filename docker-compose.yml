
services:
  naming-server:
    image: rodrigodocker158/naming-server:0.0.1-SNAPSHOT
    ports:
      - 8761:8761
    networks:
      - rodrigo-network

  api-gateway:
    image: rodrigodocker158/api-gateway:0.0.1-SNAPSHOT
    ports:
      - 8765:8765
    depends_on:
      - naming-server
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://naming-server:8761/eureka
      JWT_SECRET: oxktUVeFYg2KMcOpCmH+xqgPkbcQYBlaGGOI75hZrss
    networks:
      - rodrigo-network

  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - rodrigo-network
  
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
       - rodrigo-network
    ports:
      - 9090:9090
  
  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - rodrigo-network
          
  pessoa-db:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: pessoa
    volumes:
      - pessoa-db-data:/var/lib/postgresql/data
    networks:
      - rodrigo-network

  multa-db:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: multa
    volumes:
      - multa-db-data:/var/lib/postgresql/data
    networks:
      - rodrigo-network

  cliente-db:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: usuarios_microservicos
    volumes:
      - cliente-db-data:/var/lib/postgresql/data
    networks:
      - rodrigo-network

  livro-db:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: livro
    volumes:
      - livro-db-data:/var/lib/postgresql/data
    networks:
      - rodrigo-network

  aluguel-db:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: aluguel
    volumes:
      - aluguel-db-data:/var/lib/postgresql/data
    networks:
      - rodrigo-network
  
  pessoa:
    image: rodrigodocker158/pessoa
    ports:
      - 8700:8700
    build:
      context: .
      dockerfile: pessoa/Dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://pessoa-db:5432/pessoa
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://naming-server:8761/eureka
      MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: health,prometheus
    depends_on:
      - pessoa-db
      - naming-server
    networks:
      - rodrigo-network

  multa:
    image: rodrigodocker158/multa
    ports:
      - 9000:9000
    build:
      context: .
      dockerfile: multa/Dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://multa-db:5432/multa
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://naming-server:8761/eureka
      MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: health,prometheus
    depends_on:
      - multa-db
      - naming-server
      - aluguel
    networks:
      - rodrigo-network

  cliente:
    image: rodrigodocker158/clientes.springboot
    ports:
      - 8200:8200
    build:
      context: .
      dockerfile: cliente_microservicos/Dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://cliente-db:5432/usuarios_microservicos
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://naming-server:8761/eureka
      SECURITY_JWT_TOKEN_SECRET_KEY: oxktUVeFYg2KMcOpCmH+xqgPkbcQYBlaGGOI75hZrss
      MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: health,prometheus
    depends_on:
      - cliente-db
      - naming-server
      - pessoa
    networks:
      - rodrigo-network

  book:
    image: rodrigodocker158/book
    ports:
      - 8000:8000
    build:
      context: .
      dockerfile: book/Dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://livro-db:5432/livro
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://naming-server:8761/eureka
      MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: "health,prometheus"
    depends_on:
      - livro-db
      - naming-server
    networks:
      - rodrigo-network
      
  aluguel:
    image: rodrigodocker158/aluguel
    ports:
      - 8100:8100
    build:
      context: .
      dockerfile: aluguel/Dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://aluguel-db:5432/aluguel
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://naming-server:8761/eureka
      MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: health,prometheus
    depends_on:
      - aluguel-db
      - naming-server
      - pessoa
      - book
    networks:
      - rodrigo-network

networks:
  rodrigo-network:
    driver: bridge

volumes:
  postgres-data:
  pessoa-db-data:
  multa-db-data:
  cliente-db-data:
  livro-db-data:
  aluguel-db-data:
  prometheus_data:
  grafana_data:
